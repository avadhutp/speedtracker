#!/usr/bin/env python

import shlex
import subprocess
import sys


CRED = '\033[91m'
CGREEN = '\33[32m'
CEND = '\033[0m'

ENCRYPTION_KEY_PROP = 'encryptionKey'
WPT_KEY_PROP = 'wptKey'

URL_ENCRYPT = 'https://api.speedtracker.org/encrypt/{key}/{payload}'
WGET_CMD = 'wget --no-verbose --timeout 5 -O - {url}'
SED_CMD = 'sed -i -r \'/{prop}: (.*)/s/"(.*)"/"{value}"/\' speedtracker.yml'


USER_ENCRYPTION_KEY = ''


def version_check():
	if sys.version_info < (2, 7):
		raise Exception('Must use python 2.7 or greater')


def run_cmd(cmd):
	p = subprocess.Popen(
			shlex.split(cmd),
			stdout=subprocess.PIPE,
			stderr=subprocess.PIPE,
		)

	out, err = p.communicate()
	
	if p.returncode == 0:
		return out

	raise Exception('Failed making a call to {cmd}: {err}'.format(
		cmd=cmd,
		err=err,
	))


def success(msg):
	print CGREEN + '[success] ' + msg + CEND


def replace_in_speedtracker_yaml(prop, value):
	run_cmd(SED_CMD.format(
		prop=prop,
		value=value,
	))


def make_call(url):
	cmd = WGET_CMD.format(url=url)

	return run_cmd(cmd)


def setup_encryption_key():
	key = ''
	while key == '':
		key = raw_input('Enter your encryption key: ')

	url = URL_ENCRYPT.format(key=key, payload='')
	encryption_key = make_call(url)
	replace_in_speedtracker_yaml(ENCRYPTION_KEY_PROP, encryption_key)
	USER_ENCRYPTION_KEY = key

	success('{prop} updated in speedtracker.yml'.format(prop=ENCRYPTION_KEY_PROP))


def setup_wpt_key():
	key= ''


def main():
	print '----Speedtracker setup----'
	try:
		version_check()
		setup_encryption_key()
	except Exception as e:
		print CRED + '[error] {err}'.format(err=str(e)) + CEND


if __name__ == '__main__':
	main()